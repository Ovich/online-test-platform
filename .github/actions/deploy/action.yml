name: 'Deployment Procedure'
description: 'Common deployment steps'
inputs:
  POSTGRES_USER:
    description: 'PostgreSQL user'
    required: true
  POSTGRES_PASSWORD:
    description: 'PostgreSQL password'
    required: true
  POSTGRES_DB:
    description: 'PostgreSQL database'
    required: true
  GH_APP_ID:
    description: 'GitHub App ID'
    required: true
  GH_APP_INSTALLATION_ID:
    description: 'GitHub App Installation ID'
    required: true
  GH_APP_PRIVATE_KEY:
    description: 'GitHub App Private Key'
    required: true
  NEXTAUTH_SECRET:
    description: 'NextAuth Secret'
    required: true
  NEXTAUTH_GITHUB_ID:
    description: 'NextAuth GitHub ID'
    required: true
  NEXTAUTH_GITHUB_SECRET:
    description: 'NextAuth GitHub Secret'
    required: true
  SSL_FULLCHAIN:
    description: 'SSL Fullchain'
    required: true
  SSL_PRIVKEY:
    description: 'SSL Privkey'
    required: true
runs:
  using: 'composite'
  steps:
    
    - name: Move checked-out code to production folder
      run: |
        rsync -av --progress $GITHUB_WORKSPACE/ /home/heiguser/onlinetest/ --exclude .git
      shell: bash

    - name: Generate environment files
      run: |
        cd /home/heiguser/onlinetest
        echo "DATABASE_URL=postgresql://${{ inputs.POSTGRES_USER }}:${{ inputs.POSTGRES_PASSWORD }}@db:5432/onlinetest" > web/.env
        echo "POSTGRES_USER=${{ inputs.POSTGRES_USER }}" >> web/.env
        echo "POSTGRES_PASSWORD=${{ inputs.POSTGRES_PASSWORD }}" >> web/.env
        echo "POSTGRES_DB=${{ inputs.POSTGRES_DB }}" >> web/.env
        echo "GITHUB_ORG=heigvd-teaching-tools" >> web/.env
        echo "GITHUB_APP_ID=${{ inputs.GH_APP_ID }}" >> web/.env
        echo "GITHUB_APP_PRIVATE_KEY_PATH=eval-teaching-tools.private-key.pem" >> web/.env
        echo "GITHUB_APP_INSTALLATION_ID=${{ inputs.GH_APP_INSTALLATION_ID }}" >> web/.env

        echo "NEXTAUTH_URL=https://eval.iict-heig-vd.in" > web/.env.production
        echo "NEXTAUTH_SECRET=${{ inputs.NEXTAUTH_SECRET }}" >> web/.env.production
        echo "NEXTAUTH_GITHUB_ID=${{ inputs.NEXTAUTH_GITHUB_ID }}" >> web/.env.production
        echo "NEXTAUTH_GITHUB_SECRET=${{ inputs.NEXTAUTH_GITHUB_SECRET }}" >> web/.env.production
        echo "DB_SANDBOX_CLIENT_HOST=172.17.0.1" >> web/.env.production
      shell: bash

    - name: Generate GitHub App private key and ssl certificates
      run: |
        cd /home/heiguser/onlinetest
        mkdir -p web
        echo "${{ secrets.GH_APP_PRIVATE_KEY }}" > web/eval-teaching-tools.private-key.pem

        mkdir -p ssl
        echo "${{ inputs.SSL_FULLCHAIN }}" > ssl/fullchain.pem
        echo "${{ inputs.SSL_PRIVKEY }}" > ssl/privkey.pem
      shell: bash
        
    - name: Build Custom Docker images
      run: |
        cd /home/heiguser/onlinetest
        docker build -t custom-sqlfluff ./docker-images/custom-sqlfluff
      shell: bash

    - name: Build Docker Compose Images
      run: |
        cd /home/heiguser/onlinetest
        docker compose build
      shell: bash

    - name: Start Docker Compose Services
      run: |
        cd /home/heiguser/onlinetest
        docker compose up -d
      shell: bash

    - name: Run Prisma Migrations
      run: |
        cd /home/heiguser/onlinetest
        container_id=$(docker ps -qf "name=onlinetest-web-")
        docker exec $container_id npx prisma migrate deploy
      shell: bash

